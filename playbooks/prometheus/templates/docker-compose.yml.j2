# This is a Docker Compose file for setting up a monitoring stack with Prometheus, Alertmanager, and Grafana.
# Generated by Ansible playbook on {{ ansible_date_time.iso8601 }}
# It includes configuration for Prometheus to scrape metrics, Alertmanager to handle alerts, and Grafana for visualization.
# The stack is connected via a custom network named '{{ docker_network_name }}'.

version: '3.8'

services:
  prometheus:
    image: {{ docker_images.prometheus }}
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alert.rules.yml:/etc/prometheus/alert.rules.yml
      - ./prometheus_data:/prometheus
      - ./node_list.json:/etc/prometheus/targets/fleet.json
    ports:
      - "{{ prometheus_port }}:9090"
    restart: unless-stopped
    networks:
      - {{ docker_network_name }}
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'

  alertmanager:
    image: {{ docker_images.alertmanager }}
    container_name: alertmanager
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - ./alertmanager_data:/alertmanager
    ports:
      - "{{ alertmanager_port }}:9093"
    restart: unless-stopped
    networks:
      - {{ docker_network_name }}
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'

  grafana:
    image: {{ docker_images.grafana }}
    container_name: grafana
    user: "472"  # default grafana user ID
    volumes:
      - ./grafana_data:/var/lib/grafana
      - ./grafana_prometheus_ds.yml:/etc/grafana/provisioning/datasources/prometheus.yml
    ports:
      - "{{ grafana_port }}:3000"
    restart: unless-stopped
    networks:
      - {{ docker_network_name }}
    environment:
      - GF_SECURITY_ADMIN_USER={{ grafana.admin_user }}
      - GF_SECURITY_ADMIN_PASSWORD={{ grafana.admin_password }}
      - GF_USERS_ALLOW_SIGN_UP=false

networks:
  {{ docker_network_name }}:
    driver: bridge
